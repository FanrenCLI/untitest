/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.example.demo.model;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.example.demo.model.UserInfo;
import org.junit.runner.RunWith;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class UserInfo_SSTest extends UserInfo_SSTest_scaffolding {
// allCoveredLines:[5, 10, 14, 18, 22, 26, 30, 34, 38, 42, 47]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:0a4997c606408df90ec55a4c59f313f2
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: 1.0
      //Assert: assertFalse(method_result);
      
      UserInfo userInfo0 = new UserInfo();
      
      //Call method: equals
      boolean boolean0 = userInfo0.equals("1.0");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:0a0fb27ebcdc832757afd2abe5754e28
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: userInfo0
      //Assert: assertTrue(method_result);
      
      UserInfo userInfo0 = new UserInfo();
      
      //Call method: equals
      boolean boolean0 = userInfo0.equals(userInfo0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:318ce4a43a40e0572dcf62d9db2769f7
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 30, 38, 42]
      //Input_0_Object: userInfo0
      //Assert: assertFalse(method_result);
      
      UserInfo userInfo0 = new UserInfo();
      
      PrivateAccess.setVariable((Class<?>) UserInfo.class, userInfo0, "userName", (Object) "");
      UserInfo userInfo1 = new UserInfo();
      
      //Call method: equals
      boolean boolean0 = userInfo1.equals(userInfo0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:529cb175f58618e9a90c8545bd01c5be
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 30, 38, 42]
      //Input_0_Object: userInfo1
      //Assert: assertFalse(method_result);
      
      UserInfo userInfo0 = new UserInfo();
      
      PrivateAccess.setVariable((Class<?>) UserInfo.class, userInfo0, "userName", (Object) "1");
      UserInfo userInfo1 = new UserInfo();
      
      //Call method: equals
      boolean boolean0 = userInfo0.equals(userInfo1);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:4d8b6ad40ac89b981c7ab930a5a8380c
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18, 22, 26, 30, 34, 38, 42, 47]
      
      UserInfo userInfo0 = new UserInfo();
      
      //Call method: hashCode
      userInfo0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setLeaderNo_05()  throws Throwable  {
      //caseID:d513d9fb92483d4d5b6e56ace15a65b7
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Integer: 1231
      
      UserInfo userInfo0 = new UserInfo();
      Integer integer0 = new Integer(1231);
      
      //Call method: setLeaderNo
      userInfo0.setLeaderNo(integer0);
      
      //Test Result Assert
      assertNull(userInfo0.getUserId());
  }

  @Test(timeout = 9000)
  public void test_setPartId_06()  throws Throwable  {
      //caseID:a6377b272e165aefa171c86e543513e0
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Integer: (-1)
      
      UserInfo userInfo0 = new UserInfo();
      Integer integer0 = new Integer((-1));
      
      //Call method: setPartId
      userInfo0.setPartId(integer0);
      
      //Test Result Assert
      assertNull(userInfo0.getUserLinkNo());
  }

  @Test(timeout = 9000)
  public void test_setPartName_07()  throws Throwable  {
      //caseID:b30d35b9230e6939be6c2bc94b8e4bf1
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 43
      
      UserInfo userInfo0 = new UserInfo();
      
      //Call method: setPartName
      userInfo0.setPartName("43");
      
      //Test Result Assert
      assertNull(userInfo0.getUserLinkNo());
  }

  @Test(timeout = 9000)
  public void test_setSignInDate_08()  throws Throwable  {
      //caseID:d6fa65512e62e489f0001fce17e189a4
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Integer: 2228
      
      UserInfo userInfo0 = new UserInfo();
      Integer integer0 = new Integer(2228);
      
      //Call method: setSignInDate
      userInfo0.setSignInDate(integer0);
      
      //Test Result Assert
      assertNull(userInfo0.getUserLinkNo());
  }

  @Test(timeout = 9000)
  public void test_setUserCode_09()  throws Throwable  {
      //caseID:9370efa12013f6b891b8beec63add3ff
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: m`?-Upq7<y(
      
      UserInfo userInfo0 = new UserInfo();
      
      //Call method: setUserCode
      userInfo0.setUserCode("m`?-Upq7<y(");
      
      //Test Result Assert
      assertNull(userInfo0.getUserLinkNo());
  }

  @Test(timeout = 9000)
  public void test_setUserId_10()  throws Throwable  {
      //caseID:eba990cbd5b645ef054574a1e705d10f
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Integer: 1
      
      UserInfo userInfo0 = new UserInfo();
      Integer integer0 = new Integer(1);
      
      //Call method: setUserId
      userInfo0.setUserId(integer0);
      
      //Test Result Assert
      assertNull(userInfo0.getLeaderNo());
  }

  @Test(timeout = 9000)
  public void test_setUserLinkNo_11()  throws Throwable  {
      //caseID:c8f78a5d1373be25925d81f3b351959a
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 
      
      UserInfo userInfo0 = new UserInfo();
      
      //Call method: setUserLinkNo
      userInfo0.setUserLinkNo("");
      
      //Test Result Assert
      assertNull(userInfo0.getLeaderNo());
  }

  @Test(timeout = 9000)
  public void test_setUserName_12()  throws Throwable  {
      //caseID:6292e2374d9179c4572035c602da7cc0
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 43
      
      UserInfo userInfo0 = new UserInfo();
      
      //Call method: setUserName
      userInfo0.setUserName("43");
      
      //Test Result Assert
      assertNull(userInfo0.getUserId());
  }

  @Test(timeout = 9000)
  public void test_setUserSex_13()  throws Throwable  {
      //caseID:6c619da986fec6c43613b14dfc8679a6
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 
      
      UserInfo userInfo0 = new UserInfo();
      
      //Call method: setUserSex
      userInfo0.setUserSex("");
      
      //Test Result Assert
      assertNull(userInfo0.getUserId());
  }

  @Test(timeout = 9000)
  public void test_setUserTag_14()  throws Throwable  {
      //caseID:bac1c515d164e51da934cfbfa81aaa70
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 1.0
      
      UserInfo userInfo0 = new UserInfo();
      
      //Call method: setUserTag
      userInfo0.setUserTag("1.0");
      
      //Test Result Assert
      assertNull(userInfo0.getUserSex());
  }

  @Test(timeout = 9000)
  public void test_toString_15()  throws Throwable  {
      //caseID:dcc11eedb138bdac9eb9cbb0b43b0dd5
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 10, 14, 18, 22, 26, 30, 34, 38, 42, 47]
      //Assert: assertEquals("UserInfo(userId=null, userName=null, userSex=null, userCode=null, userLinkNo=null, signInDate=null, userTag=null, leaderNo=null, partId=null, partName=null)", method_result);
      
      UserInfo userInfo0 = new UserInfo();
      
      //Call method: toString
      String string0 = userInfo0.toString();
      
      //Test Result Assert
      assertEquals("UserInfo(userId=null, userName=null, userSex=null, userCode=null, userLinkNo=null, signInDate=null, userTag=null, leaderNo=null, partId=null, partName=null)", string0);
  }
}
