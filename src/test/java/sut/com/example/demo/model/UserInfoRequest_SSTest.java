/*
 * This file was automatically generated by SmartUnit
 */

package sut.com.example.demo.model;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.example.demo.model.UserInfoRequest;
import org.junit.runner.RunWith;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVNET = true, resetStaticState = true) 
public class UserInfoRequest_SSTest extends UserInfoRequest_SSTest_scaffolding {
// allCoveredLines:[5, 7, 8, 12, 16, 20, 24, 28, 32]

  @Test(timeout = 9000)
  public void test_equals_00()  throws Throwable  {
      //caseID:3bda25ccac06bc4264967083a1f0b4c4
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: 1
      //Assert: assertFalse(method_result);
      
      UserInfoRequest userInfoRequest0 = new UserInfoRequest();
      
      //Call method: equals
      boolean boolean0 = userInfoRequest0.equals("1");
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_01()  throws Throwable  {
      //caseID:18244ab4cdcb3d9d9dc1eab20c2e1a29
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Object: userInfoRequest0
      //Assert: assertTrue(method_result);
      
      UserInfoRequest userInfoRequest0 = new UserInfoRequest();
      
      //Call method: equals
      boolean boolean0 = userInfoRequest0.equals(userInfoRequest0);
      
      //Test Result Assert
      assertTrue(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_02()  throws Throwable  {
      //caseID:884c935874731c038ae3b765d9c8e39f
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 8, 12]
      //Input_0_Object: userInfoRequest1
      //Assert: assertFalse(method_result);
      
      UserInfoRequest userInfoRequest0 = new UserInfoRequest();
      Integer integer0 = new Integer(821);
      
      PrivateAccess.setVariable((Class<?>) UserInfoRequest.class, userInfoRequest0, "userId", (Object) integer0);
      UserInfoRequest userInfoRequest1 = new UserInfoRequest();
      
      //Call method: equals
      boolean boolean0 = userInfoRequest0.equals(userInfoRequest1);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_equals_03()  throws Throwable  {
      //caseID:d4309ffaac4936262da823b649f6d9da
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 8, 12]
      //Input_0_Object: userInfoRequest0
      //Assert: assertFalse(method_result);
      
      UserInfoRequest userInfoRequest0 = new UserInfoRequest();
      Integer integer0 = new Integer(0);
      
      PrivateAccess.setVariable((Class<?>) UserInfoRequest.class, userInfoRequest0, "userId", (Object) integer0);
      UserInfoRequest userInfoRequest1 = new UserInfoRequest();
      
      //Call method: equals
      boolean boolean0 = userInfoRequest1.equals(userInfoRequest0);
      
      //Test Result Assert
      assertFalse(boolean0);
  }

  @Test(timeout = 9000)
  public void test_hashCode_04()  throws Throwable  {
      //caseID:60ab587b50c68205d48134cabec2876b
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7, 8, 12, 16, 20, 24, 28, 32]
      
      UserInfoRequest userInfoRequest0 = new UserInfoRequest();
      
      //Call method: hashCode
      userInfoRequest0.hashCode();
  }

  @Test(timeout = 9000)
  public void test_setErrorInfo_05()  throws Throwable  {
      //caseID:0659691278fcc443cf2d6a4474ee7e33
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 
      
      UserInfoRequest userInfoRequest0 = new UserInfoRequest();
      
      //Call method: setErrorInfo
      userInfoRequest0.setErrorInfo("");
      
      //Test Result Assert
      assertNull(userInfoRequest0.getLeaderNo());
  }

  @Test(timeout = 9000)
  public void test_setErrorNo_06()  throws Throwable  {
      //caseID:8fe51282c45206403e086aa329f690e8
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Integer: 4228
      
      UserInfoRequest userInfoRequest0 = new UserInfoRequest();
      Integer integer0 = new Integer(4228);
      
      //Call method: setErrorNo
      userInfoRequest0.setErrorNo(integer0);
      
      //Test Result Assert
      assertNull(userInfoRequest0.getLeaderNo());
  }

  @Test(timeout = 9000)
  public void test_setLeaderNo_07()  throws Throwable  {
      //caseID:b06172e5b511c9fd373d85f1beb0823f
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Integer: 231
      
      UserInfoRequest userInfoRequest0 = new UserInfoRequest();
      Integer integer0 = new Integer(231);
      
      //Call method: setLeaderNo
      userInfoRequest0.setLeaderNo(integer0);
      
      //Test Result Assert
      assertEquals(231, (int)userInfoRequest0.getLeaderNo());
  }

  @Test(timeout = 9000)
  public void test_setPartId_08()  throws Throwable  {
      //caseID:2cc658003fd859d45d45a6028a8eec5d
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Integer: 0
      
      UserInfoRequest userInfoRequest0 = new UserInfoRequest();
      Integer integer0 = new Integer(0);
      
      //Call method: setPartId
      userInfoRequest0.setPartId(integer0);
      
      //Test Result Assert
      assertNull(userInfoRequest0.getUserTag());
  }

  @Test(timeout = 9000)
  public void test_setUserCode_09()  throws Throwable  {
      //caseID:4fb644558743baf97d836979af8407f6
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: , userId=
      
      UserInfoRequest userInfoRequest0 = new UserInfoRequest();
      
      //Call method: setUserCode
      userInfoRequest0.setUserCode(", userId=");
      
      //Test Result Assert
      assertNull(userInfoRequest0.getErrorNo());
  }

  @Test(timeout = 9000)
  public void test_setUserId_10()  throws Throwable  {
      //caseID:26ac920eadc37bfeec39f505fb693784
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_Integer: 2461
      
      UserInfoRequest userInfoRequest0 = new UserInfoRequest();
      Integer integer0 = new Integer(2461);
      
      //Call method: setUserId
      userInfoRequest0.setUserId(integer0);
      
      //Test Result Assert
      assertNull(userInfoRequest0.getPartId());
  }

  @Test(timeout = 9000)
  public void test_setUserName_11()  throws Throwable  {
      //caseID:0d97616e6ccde495bbc71528f8165d15
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: 1
      
      UserInfoRequest userInfoRequest0 = new UserInfoRequest();
      
      //Call method: setUserName
      userInfoRequest0.setUserName("1");
      
      //Test Result Assert
      assertNull(userInfoRequest0.getPartId());
  }

  @Test(timeout = 9000)
  public void test_setUserTag_12()  throws Throwable  {
      //caseID:988433137ae10a74732602eaa6419595
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
      //Input_0_String: com.example.demo.model.UserInfoRequest
      
      UserInfoRequest userInfoRequest0 = new UserInfoRequest();
      
      //Call method: setUserTag
      userInfoRequest0.setUserTag("com.example.demo.model.UserInfoRequest");
      
      //Test Result Assert
      assertNull(userInfoRequest0.getUserName());
  }

  @Test(timeout = 9000)
  public void test_toString_13()  throws Throwable  {
      //caseID:cb797b50660e23b49f738f98611335ef
      //CoveredLines: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7, 8, 12, 16, 20, 24, 28, 32]
      //Assert: assertEquals("UserInfoRequest(errorInfo=null, errorNo=null, userId=null, userName=null, userCode=null, userTag=null, leaderNo=null, partId=null)", method_result);
      
      UserInfoRequest userInfoRequest0 = new UserInfoRequest();
      
      //Call method: toString
      String string0 = userInfoRequest0.toString();
      
      //Test Result Assert
      assertEquals("UserInfoRequest(errorInfo=null, errorNo=null, userId=null, userName=null, userCode=null, userTag=null, leaderNo=null, partId=null)", string0);
  }
}
